{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fmodern\fcharset0 Courier;\f4\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red27\green29\blue31;\red235\green236\blue237;
\red0\green0\blue0;\red255\green255\blue255;\red255\green255\blue255;\red216\green8\blue21;\red55\green59\blue67;
\red52\green52\blue52;\red236\green236\blue236;\red115\green0\blue2;\red117\green117\blue117;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c14118\c15294\c16078;\cssrgb\c93725\c94118\c94510;
\csgray\c0;\csgray\c100000;\cssrgb\c100000\c100000\c100000;\cssrgb\c88627\c13725\c10196;\cssrgb\c27843\c29804\c33333;
\cssrgb\c26667\c26667\c26667;\cssrgb\c94118\c94118\c94118;\cssrgb\c53333\c0\c0;\cssrgb\c53333\c53333\c53333;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww24920\viewh10820\viewkind0
\deftab720
\pard\tx720\pardeftab720\sl280\partightenfactor0

\f0\fs36 \cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0
\f1 \cf2 1. Install Appium\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0{\field{\*\fldinst{HYPERLINK "http://appium.io/"}}{\fldrslt \cf2 http://appium.io/}}
\f0 \
\pard\tx720\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls2\ilvl0\cf2 2.\
\pard\pardeftab720\sl300\partightenfactor0

\f1 \cf3 \cb4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec3 npm install grunt -g\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://gruntjs.com/getting-started"}}{\fldrslt \cf5 \cb6 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 http://gruntjs.com/getting-started}}\cf5 \cb6 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 \
\pard\pardeftab720\sl340\partightenfactor0
\cf3 \cb7 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec3 grunt --version\
npm -v\
node -v\cb4 \
\pard\pardeftab720\sl300\partightenfactor0
\cf3 \
3.\
\pard\pardeftab720\sl300\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://saucelabs.com/blog/mobile-test-automation-in-java-with-appium"}}{\fldrslt \cf3 https://saucelabs.com/blog/mobile-test-automation-in-java-with-appium}}\
\pard\pardeftab720\sl300\partightenfactor0
\cf3 \
\pard\pardeftab720\sl360\sa480\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://appium.io/"}}{\fldrslt 
\f2 \cf8 \cb1 \ul \ulc8 \strokec8 Appium}}
\f2 \cf9 \cb1 \strokec9  is an open source test automation tool which allows you to easily write functional tests that automate iOS and Android mobile apps. One big advantage Appium has over other mobile test automation tools is that Appium tests can be written in any language that has a Selenium client library, including Python, Ruby, Node.js, and, perhaps most interesting to mobile developers, Objective-C and Java.\
In this post we'll walk through the steps involved in testing the {\field{\*\fldinst{HYPERLINK "https://github.com/appium/sample-code/tree/master/sample-code/apps"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 iOS sample apps}} using the {\field{\*\fldinst{HYPERLINK "https://github.com/appium/sample-code/tree/master/sample-code/examples/java/junit"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 JUnit Java example tests}} (we also have created {\field{\*\fldinst{HYPERLINK "https://github.com/appium/sample-code/tree/master/sample-code/examples/java/testng"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 TestNG example tests}} too).\
To start, fork and clone Appium from {\field{\*\fldinst{HYPERLINK "https://github.com/appium/appium"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 https://github.com/appium/appium}}, and follow the installation instructions to set up Appium in your environment.\
Download and build the {\field{\*\fldinst{HYPERLINK "https://github.com/appium/sample-code/tree/master/sample-code/apps"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 sample projects}} by running the following from the command line:\
\pard\pardeftab720\sl360\sa480\partightenfactor0

\f3 \cf9 grunt getSampleCode
\f2  \uc0\u8232 
\f3 grunt buildApp:TestApp
\f2  \uc0\u8232 
\f3 grunt buildApp:UICatalog
\f2 \
Once the sample projects have have been built, you can then start Appium by running the following:\

\f3 grunt appium
\f2 \
Change the working directory to the 
\f3 sample-code/examples/java/junit
\f2  directory, and run the tests by executing:\

\f3 mvn test
\f2 \
Or run a single test by executing: 
\f3 mvn -Dtest=com.saucelabs.appium.SimpleTest test
\f2 \
A Java Appium test is much the same as a Selenium test...you create a RemoteWebDriver instance by specifying some DesiredCapabilities, e.g.:\
\pard\pardeftab720\sl360\partightenfactor0

\f3 \cf9     @Before\
    public void setUp() throws Exception \{\
        // set up appium against a local application\
        File appDir = new File(System.getProperty("user.dir"), "../../../apps/TestApp/build/Release-iphonesimulator");\
\pard\pardeftab720\sl360\partightenfactor0
\cf10 \cb11 \strokec10     File app = 
\f4\b new
\f3\b0  File(appDir, \cf12 \strokec12 "TestApp.app"\cf10 \strokec10 );\
    DesiredCapabilities capabilities = 
\f4\b new
\f3\b0  DesiredCapabilities();\
    capabilities.setCapability(CapabilityType.BROWSER_NAME, \cf12 \strokec12 "iOS"\cf10 \strokec10 );\
    capabilities.setCapability(CapabilityType.VERSION, \cf12 \strokec12 "6.0"\cf10 \strokec10 );\
    capabilities.setCapability(CapabilityType.PLATFORM, \cf12 \strokec12 "Mac"\cf10 \strokec10 );\
\
    \cf13 \strokec13 //tell Appium where the location of the app is\cf10 \strokec10 \
    capabilities.setCapability(\cf12 \strokec12 "app"\cf10 \strokec10 , app.getAbsolutePath());\
\
    \cf13 \strokec13 //create a RemoteWebDriver, the default port for Appium is 4723\cf10 \strokec10 \
    driver = 
\f4\b new
\f3\b0  RemoteWebDriver(
\f4\b new
\f3\b0  URL(\cf12 \strokec12 "http://127.0.0.1:4723/wd/hub"\cf10 \strokec10 ), capabilities);\
\}</pre>\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sl360\sa480\partightenfactor0
\cf9 Tests can also be written to be run against {\field{\*\fldinst{HYPERLINK "http://saucelabs.com/"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 Sauce Labs}}. To do this, just update your tests to reference a zip file containing your app, and update your RemoteWebDriver instance to point to ondemand.saucelabs.com, eg:\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 @Before\
    public void setUp() throws Exception \{\
        String sauceUserName = "YOUR_SAUCE_USERNAME";\
        String sauceAccessKey = "YOUR_SAUCE_ACCESS_KEY";\
\pard\pardeftab720\sl360\partightenfactor0
\cf10 \cb11 \strokec10     DesiredCapabilities capabilities = 
\f4\b new
\f3\b0  DesiredCapabilities();\
    capabilities.setCapability(CapabilityType.BROWSER_NAME, \cf12 \strokec12 "iOS 6.0"\cf10 \strokec10 );\
    capabilities.setCapability(\cf12 \strokec12 "device"\cf10 \strokec10 , \cf12 \strokec12 "iPhone Simulator"\cf10 \strokec10 );\
    capabilities.setCapability(CapabilityType.PLATFORM, \cf12 \strokec12 "Mac 10.8"\cf10 \strokec10 );\
\
    \cf13 \strokec13 //zip file containing your app to be tested\cf10 \strokec10 \
    capabilities.setCapability(\cf12 \strokec12 "app"\cf10 \strokec10 , \cf12 \strokec12 "http://appium.s3.amazonaws.com/TestApp6.0.app.zip"\cf10 \strokec10 );\
\
    driver = 
\f4\b new
\f3\b0  RemoteWebDriver(
\f4\b new
\f3\b0  URL(MessageFormat.format(\cf12 \strokec12 "http://\{0\}:\{1\}@ondemand.saucelabs.com:80/wd/hub"\cf10 \strokec10 , sauceUserName, sauceAccessKey)),\
            capabilities);\
\}</pre>\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sl360\sa480\partightenfactor0
\cf9 The tests themselves are written just like regular Selenium tests, eg.\
\pard\pardeftab720\sl360\partightenfactor0
\cf9     @Test\
    public void example() throws Exception \{\
\pard\pardeftab720\sl360\partightenfactor0
\cf10 \cb11 \strokec10     \cf13 \strokec13 // find an element by tag name\cf10 \strokec10 \
    WebElement button = driver.findElement(By.tagName(\cf12 \strokec12 "button"\cf10 \strokec10 ));\
    button.click();\
\
    \cf13 \strokec13 // get the value of the element\cf10 \strokec10 \
    WebElement texts = driver.findElement(By.tagName(\cf12 \strokec12 "staticText"\cf10 \strokec10 ));\
    assertEquals(texts.getText(), \cf12 \strokec12 "some expected value"\cf10 \strokec10 );\
\}</pre>\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb1 \strokec9 \
\pard\pardeftab720\sl360\sa480\partightenfactor0
\cf9 The Java sample tests for Appium include the following classes:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\partightenfactor0
\ls3\ilvl0\cf9 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360\partightenfactor0
\ls3\ilvl0\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "https://github.com/appium/sample-code/blob/master/sample-code/examples/java/junit/src/test/java/com/saucelabs/appium/SimpleTest.java"}}{\fldrslt \expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec8 SimpleTest}}\cf9 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9  - runs a test against a simple {\field{\*\fldinst{HYPERLINK "https://github.com/appium/appium/tree/master/sample-code/apps/TestApp"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 TestApp}}\
\ls3\ilvl0\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "https://github.com/appium/sample-code/blob/master/sample-code/examples/java/junit/src/test/java/com/saucelabs/appium/SauceTest.java"}}{\fldrslt \expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec8 SauceTest}}\cf9 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9  - runs the same test using {\field{\*\fldinst{HYPERLINK "http://saucelabs.com/"}}{\fldrslt \cf8 \ul \ulc8 \strokec8 Sauce Labs}}\
\ls3\ilvl0\cf8 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}{\field{\*\fldinst{HYPERLINK "https://github.com/appium/sample-code/blob/master/sample-code/examples/java/junit/src/test/java/com/saucelabs/appium/UICatalogTest.java"}}{\fldrslt \expnd0\expndtw0\kerning0
\ul \outl0\strokewidth0 \strokec8 UICatalogTest}}\cf9 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec9  - runs a series of tests against the UICatalog sample application\
}